openapi: 3.0.0
info:
  description: API schema for Real-Name-TBD College App
  version: 0.0.1
  title: Real-Name-TBD College App

tags:
  - name: channels
    description: Everything about your channel.
    
  - name: auth
    description: Auth related operations.
    
  - name: user
    description: User related operations.

paths:
  /channels/all:
    get:
      tags: 
        - channels
      summary: Get all public channels
      description: This endpoint is used to information regarding all public channels.
      responses:
        200:
          description: Returns an array, containing information of all public channels.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/channel'
        401:
          $ref: '#/components/responses/UnauthorizedError'
          
  /channels/user:
    get:
      tags:
        - channels
      summary: Get channels a user is subscribed to.
      description: This endpoint gets all the channels a user is subscribed to.
      responses:
        200:
          description: Returns an array, containing the information of the channels the user has subscribed to.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channel'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        
  /channels/info:
    get:
      tags: 
        - channels
      summary: Get info of a channel.
      description: This endpoint gets the information of the given channel.
      parameters: 
        - name: id
          in: query
          description: "the channel id"
          required: true
          schema:
            type: string
            format: uuid
            minimum: 1
            maximum: 1
      responses:
        200:
          description: Returns the info of the required channel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channel'
        404:
          description: Channel not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags: 
        - channels
      summary: Update info of a channel.
      description: This endpoint is used to update the information of the given channel. You need to only specify the fields that are to be updated.<br/>In case the admins are to be added or removed, specify the `admin` and the `admin_action` (`add` to add the admin, or `remove` to remove the given admin). 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: name of the channel.
                  type: string
                  example: some channel
                type:
                  description: type of the channel. Can be one of "private" or "public".
                  type: string
                  enum: [private, public]
                dp:
                  description: channel display pic (the actual image).
                  type: string
                  format: binary
                admin:
                  description: the user id of the admin to add or remove.
                  type: string
                  format: uuid
                admin_action:
                  description: whether to add or remove the given admin. can be one of "add" or "remove"
                  type: string
                  enum: [add, remove]
      responses:
        200:
          description: Update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        404:
          description: Channel not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
  
  /channels/create:
    post:
      tags:
        - channels
      summary: Creates a new channel.
      description: This endpoint is used to create a new channel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
              
      responses:
        200:
          description: Channel was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
          
  /channels/join:
    post:
      tags:
        - channels
      summary: Join a channel.
      description: This endpoint is used to join a channel. If the `user_id` is not given in the request body, it will be taken from the token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  format: uuid
                  description: id of the channel to join.
                user_id:
                  type: string
                  format: uuid
                  description: id of the user who is joining the channel.
              required:
                - channel_id
      responses:
        200:
          description: User joined the channel successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Channel not found.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'

  /channels/leave:
    post:
      tags:
        - channels
      summary: Leave a channel.
      description: This endpoint is used to leave a channel. If the `user_id` is not given in the request body, it will be taken from the token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  format: uuid
                  description: id of the channel to leave.
                user_id:
                  type: string
                  format: uuid
                  description: id of the user who is leaving the channel.
              required:
                - channel_id
      responses:
        200:
          description: User left the channel successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Channel not found.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
                
  /channels/delete:
    delete:
      tags:
        - channels
      summary: Delete a channel.
      description: This endpoint is used to delete a channel.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
            description: id of the channel to delete.
      responses:
        200:
          description: Request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
                
        404:
          description: Channel not found.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        
        401:
          $ref: '#/components/responses/UnauthorizedError'
    
  /auth/register:
    post:
      tags:
        - auth
      summary: Registeration.
      description: This endpoint is used to register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reg_no:
                  type: string
                  description: roll number of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - reg_no
                - password
      responses:
        200:
          description: User registration successful. Token is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The auth token.
  
  /auth/login:
    post:
      tags:
        - auth
      summary: Login.
      description: This endpoint is used to log a user in.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reg_no:
                  type: string
                  description: roll number of the user.
                password:
                  type: string
                  description: The password of the user.
              required:
                - reg_no
                - password
      responses:
        200:
          description: Login successful. Token is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The auth token.
  
  /user:
    get:
      tags:
        - user
      summary: Get user info.
      description: This endpoint is used to get user information.
      responses:
        200:
          description: Request successful, user info is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - user
      summary: Update user info.
      description: This endpoint is used to update (or create) user information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                reg_no:
                  type: string
                  description: university registration number.
                  example: '18ETCS021245'
                name:
                  type: string
                  description: name of the user.
                  example: John Doe
                department:
                  type: string
                  description: department the user is in.
                  example: Computer Science
                semester:
                  type: integer
                  description: semester the user is in.
                  example: 5
                section:
                  type: string
                  description: section the user is in.
                  example: C
                email:
                  type: string
                  description: email id of the user.
                  example: something@example.com
                  
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema: 
                $ref: '#/components/x-hidden-schemas/message'
        404:
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/x-hidden-schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  
components:
  schemas:
    channel:
      properties:
        id:
          description: id of the channel.
          type: string
          format: uuid
        name:
          description: name of the channel.
          type: string
          example: some channel
        members:
          description: list of users in the channel.
          type: array
          items:
            type: string
            format: uuid
          example:
            - '3fa85f64-5717-4562-b3fc-2c963f66afa6'
            - '54bg5f64-5717-4562-b3fc-2c76hjdfu9a6'
        type:
          description: type of the channel. Can be one of "private" or "public".
          type: string
          enum: [private, public]
          example: public
        dp:
          description: channel display pic (the actual image).
          type: string
          format: binary
        admins:
          description: the ids of the admins of the channel.
          type: array
          items:
            type: string
            format: uuid
          example:
            - '3fa85f64-5717-4562-b3fc-2c963f66afa6'
            - '54bg5f64-5717-4562-b3fc-2c76hjdfu9a6'

    user:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: id of the user
        reg_no:
          type: string
          description: university registration number.
          example: '18ETCS021245'
        name:
          type: string
          description: name of the user.
          example: John Doe
        department:
          type: string
          description: department the user is in.
          example: Computer Science
        semester:
          type: integer
          description: semester the user is in.
          example: 5
        section:
          type: string
          description: section the user is in.
          example: C
        email:
          type: string
          description: email id of the user.
          example: something@example.com
  
  x-hidden-schemas:
    message:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  responses:
    UnauthorizedError:
      description: Access token is missing, invalid or user is not authorized to make the request.
      content:
        application/json:
          schema:
            $ref: '#/components/x-hidden-schemas/message'
            
