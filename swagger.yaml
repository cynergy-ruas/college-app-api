---
openapi: 3.0.0
info:
  description: API schema for Real-Name-TBD College App
  version: 0.0.1
  title: Real-Name-TBD College App

tags:
  - name: channels
    description: Everything about your channel.

paths:
  /channels/all:
    get:
      tags: 
        - channels
      summary: Get all public channels
      description: This endpoint is used to information regarding all public channels.
      responses:
        200:
          description: Returns an array, containing information of all public channels.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/channel'
        401:
          $ref: '#/components/responses/UnauthorizedError'
          
  /channels/user:
    get:
      tags:
        - channels
      summary: Get channels a user is subscribed to.
      description: This endpoint gets all the channels a user is subscribed to.
      responses:
        200:
          description: Returns an array, containing the information of the channels the user has subscribed to.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channel'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        
  /channels/info:
    get:
      tags: 
        - channels
      summary: Get info of a channel.
      description: This endpoint gets the information of the given channel.
      parameters: 
        - name: id
          in: query
          description: "the channel id"
          required: true
          schema:
            type: string
            format: uuid
            minimum: 1
            maximum: 1
      responses:
        200:
          description: Returns the info of the required channel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channel'
        404:
          description: Channel not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
  
  /channels/create:
    post:
      tags:
        - channels
      summary: Creates a new channel.
      description: This endpoint is used to create a new channel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
              
      responses:
        200:
          description: Channel was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
          
  /channels/join:
    post:
      tags:
        - channels
      summary: Join a channel.
      description: This endpoint is used to join a channel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  format: uuid
                  description: id of the channel to join.
                user_id:
                  type: string
                  format: uuid
                  description: id of the user who is joining the channel. If not given, id will be taken from the token.
              required:
                - channel_id
      responses:
        200:
          description: User joined the channel successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Channel not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'

  /channels/leave:
    post:
      tags:
        - channels
      summary: Leave a channel.
      description: This endpoint is used to leave a channel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel_id:
                  type: string
                  format: uuid
                  description: id of the channel to leave.
                user_id:
                  type: string
                  format: uuid
                  description: id of the user who is leaving the channel. If not given, id will be taken from the token.
              required:
                - channel_id
      responses:
        200:
          description: User left the channel successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Channel not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'

components:
  schemas:
    channel:
      properties:
        id:
          description: id of the channel.
          type: string
          format: uuid
        name:
          description: name of the channel.
          type: string
        members:
          description: list of users in the channel.
          type: array
          items:
            type: string
            format: uuid
        type:
          description: type of the channel. Can be one of "private" or "public".
          type: string
          enum: [private, public]
        dp:
          description: channel display pic (the actual image).
          type: string
          format: binary
        admins:
          description: the ids of the admins of the channel.
          type: array
          items:
            type: string
            format: uuid
    message:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  
  responses:
    UnauthorizedError:
      description: Access token is missing, invalid or user is not authorized to make the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/message'
